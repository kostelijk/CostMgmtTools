name: deploy

on:
  workflow_call:
    inputs:
      environmentType:
        required: true
        type: string
      resourceGroupName:
        required: true
        type: string
      laResourceGroup:
        required: true
        type: string
      laName:
        required: true
        type: string
      workspaceId:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

permissions:
  id-token: write
  contents: read

jobs:

  validate:
     runs-on: windows-latest
     steps: 
     - uses: actions/checkout@v2
     - uses: azure/login@v1
       name: Sign in to Azure
       with:
         client-id: ${{ secrets.AZURE_CLIENT_ID }}
         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
     - if: inputs.environmentType != 'Production'
       uses: azure/arm-deploy@v1
       name: Run preflight validation
       with:
         deploymentName: ${{ github.run_number }}
         resourceGroupName: ${{ inputs.resourceGroupName }}
         template: ./Deploy/main.bicep
         parameters: >
           environmentType=${{ inputs.environmentType }}
           laResourceGroup=${{ inputs.laResourceGroup }}
           laName=${{ inputs.laName }}
           workspaceId=${{ inputs.workspaceId }}
         deploymentMode: Validate
     - if: inputs.environmentType == 'Production'
       uses: azure/arm-deploy@v1
       name: Run what-if
       with:
         failOnStdErr: false
         resourceGroupName: ${{ inputs.resourceGroupName }}
         template: ./Deploy/main.bicep
         parameters: >
           environmentType=${{ inputs.environmentType }}
           laResourceGroup=${{ inputs.laResourceGroup }}
           laName=${{ inputs.laName }}
           workspaceId=${{ inputs.workspaceId }}
         additionalArguments: --what-if
 
  deploy:
    needs: validate
    environment: ${{ inputs.environmentType }}
    runs-on: windows-latest
    outputs:
      appServiceAppName: ${{ steps.deploy.outputs.appServiceAppName}}
      appServiceAppHostName: ${{ steps.deploy.outputs.appServiceAppHostName }}
      storageAccountName: ${{ steps.deploy.outputs.storageAccountName }}
    steps:
    - uses: actions/checkout@v2
    - uses: azure/login@v1
      name: Sign in to Azure
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - uses: azure/arm-deploy@v1
      id: deploy
      name: Deploy Bicep file
      with:
        failOnStdErr: false
        deploymentName: ${{ github.run_number }}
        resourceGroupName: ${{ inputs.resourceGroupName }}
        template: ./Deploy/main.bicep
        parameters: >
           environmentType=${{ inputs.environmentType }}
           laResourceGroup=${{ inputs.laResourceGroup }}
           laName=${{ inputs.laName }}
           workspaceId=${{ inputs.workspaceId }}
